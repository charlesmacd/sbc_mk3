-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--D1L20 is mux8:comb_37|Mux7~23 at LC34
D1L20_p0_out = pa[2] & !pa[1] & !pa[3] & C3_q[0];
D1L20_p1_out = C4_q[0] & !pa[2] & pa[1] & pa[3];
D1L20_p2_out = !pa[2] & pa[1] & !pa[3] & C2_q[0];
D1L20_p3_out = pa[2] & pa[1] & A1L37;
D1L20_p4_out = pa[2] & !pa[1] & pa[3] & E1_ldcnt[0].ff;
D1L20_or_out = D1L21 # D1L20_p0_out # D1L20_p1_out # D1L20_p2_out # D1L20_p3_out # D1L20_p4_out;
D1L20 = D1L20_or_out;


--A1L55 is hrd_n~3 at LC126
A1L55_p1_out = !pexp_cs_n & !prd_n;
A1L55_or_out = A1L55_p1_out;
A1L55 = A1L55_or_out;


--D1L17 is mux8:comb_37|Mux6~23 at SEXP19
D1L17 = EXP(!E1_ldcnt[1].ff & pa[2] & !pa[1] & pa[3]);


--D1L18 is mux8:comb_37|Mux6~28 at LC17
D1L18_p1_out = D1L16 & D1L17;
D1L18_p0_out = D1L16 & D1L17 & !pa[2] & !pa[1] & pa[3] & !hrx[1];
D1L18_p2_out = D1L16 & D1L17 & !C3_q[1] & pa[2] & !pa[1] & !pa[3];
D1L18_p3_out = D1L16 & D1L17 & !pa[2] & pa[1] & pa[3] & !C4_q[1];
D1L18_p4_out = D1L16 & D1L17 & !pa[2] & pa[1] & !pa[3] & !C2_q[1];
D1L18_or_out = D1L18_p0_out # D1L18_p2_out # D1L18_p3_out # D1L18_p4_out;
D1L18 = D1L18_p1_out $ D1L18_or_out;


--D1L13 is mux8:comb_37|Mux5~23 at LC55
D1L13_p0_out = pa[2] & !pa[1] & !pa[3] & C3_q[2];
D1L13_p1_out = C4_q[2] & !pa[2] & pa[1] & pa[3];
D1L13_p2_out = !pa[2] & pa[1] & !pa[3] & C2_q[2];
D1L13_p3_out = pa[2] & pa[1] & A1L41;
D1L13_p4_out = pa[2] & !pa[1] & pa[3] & E1_ldcnt[2].ff;
D1L13_or_out = D1L14 # D1L13_p0_out # D1L13_p1_out # D1L13_p2_out # D1L13_p3_out # D1L13_p4_out;
D1L13 = D1L13_or_out;


--D1L11 is mux8:comb_37|Mux4~23 at LC8
D1L11_p0_out = pa[2] & !pa[1] & !pa[3] & C3_q[3];
D1L11_p1_out = C4_q[3] & !pa[2] & pa[1] & pa[3];
D1L11_p2_out = !pa[2] & pa[1] & !pa[3] & C2_q[3];
D1L11_p3_out = pa[2] & pa[1] & A1L43;
D1L11_p4_out = pa[2] & !pa[1] & pa[3] & E1_ldcnt[3].ff;
D1L11_or_out = D1L12 # D1L11_p0_out # D1L11_p1_out # D1L11_p2_out # D1L11_p3_out # D1L11_p4_out;
D1L11 = D1L11_or_out;


--D1L8 is mux8:comb_37|Mux3~23 at SEXP83
D1L8 = EXP(!hirq2_n & pa[1] & !pa[2] & pa[3]);


--D1L9 is mux8:comb_37|Mux3~28 at LC82
D1L9_p1_out = D1L7 & D1L8;
D1L9_p0_out = D1L7 & D1L8 & !pa[1] & !pa[2] & pa[3] & !hrx[4];
D1L9_p2_out = D1L7 & D1L8 & !C2_q[4] & pa[1] & !pa[2] & !pa[3];
D1L9_p3_out = D1L7 & D1L8 & !pa[1] & pa[2] & pa[3] & !E1_ldcnt[4].ff;
D1L9_p4_out = D1L7 & D1L8 & !pa[1] & pa[2] & !pa[3] & !C3_q[4];
D1L9_or_out = D1L9_p0_out # D1L9_p2_out # D1L9_p3_out # D1L9_p4_out;
D1L9 = D1L9_p1_out $ D1L9_or_out;


--D1L5 is mux8:comb_37|Mux2~23 at LC5
D1L5_p0_out = pa[2] & !pa[1] & !pa[3] & C3_q[5];
D1L5_p1_out = card_detect_n & !pa[2] & pa[1] & pa[3];
D1L5_p2_out = !pa[2] & pa[1] & !pa[3] & C2_q[5];
D1L5_p3_out = pa[2] & pa[1] & A1L47;
D1L5_p4_out = pa[2] & !pa[1] & pa[3] & E1_ldcnt[5].ff;
D1L5_or_out = D1L6 # D1L5_p0_out # D1L5_p1_out # D1L5_p2_out # D1L5_p3_out # D1L5_p4_out;
D1L5 = D1L5_or_out;


--D1L3 is mux8:comb_37|Mux1~20 at LC3
D1L3_p0_out = pa[1] & pa[2] & A1L49;
D1L3_p1_out = hrx[6] & pa[3] & !pa[1] & !pa[2];
D1L3_p2_out = pa[3] & !pa[1] & pa[2] & E1_ldcnt[6].ff;
D1L3_p3_out = !pa[3] & !pa[1] & pa[2] & C3_q[6];
D1L3_p4_out = !pa[3] & pa[1] & !pa[2] & C2_q[6];
D1L3_or_out = D1L4 # D1L3_p0_out # D1L3_p1_out # D1L3_p2_out # D1L3_p3_out # D1L3_p4_out;
D1L3 = D1L3_or_out;


--D1L1 is mux8:comb_37|Mux0~20 at LC29
D1L1_p0_out = pa[1] & pa[2] & A1L51;
D1L1_p1_out = hrx[7] & pa[3] & !pa[1] & !pa[2];
D1L1_p2_out = pa[3] & !pa[1] & pa[2] & E1_ldcnt[7].ff;
D1L1_p3_out = !pa[3] & !pa[1] & pa[2] & C3_q[7];
D1L1_p4_out = !pa[3] & pa[1] & !pa[2] & C2_q[7];
D1L1_or_out = D1L2 # D1L1_p0_out # D1L1_p1_out # D1L1_p2_out # D1L1_p3_out # D1L1_p4_out;
D1L1 = D1L1_or_out;


--A1L79 is pd[0]~24 at LC64
A1L79_or_out = A1L78;
A1L79 = A1L79_or_out;


--A1L70 is hwr_n~2 at LC65
A1L70_p1_out = !pa[3] & !pexp_cs_n & !pwr_n & pa[1] & pa[2];
A1L70_or_out = A1L70_p1_out;
A1L70 = !(A1L70_or_out);


--A1L82 is pd[1]~26 at LC57
A1L82_or_out = A1L81;
A1L82 = A1L82_or_out;


--A1L85 is pd[2]~28 at LC61
A1L85_or_out = A1L84;
A1L85 = A1L85_or_out;


--A1L88 is pd[3]~30 at LC37
A1L88_or_out = A1L87;
A1L88 = A1L88_or_out;


--A1L91 is pd[4]~32 at LC35
A1L91_or_out = A1L90;
A1L91 = A1L91_or_out;


--A1L94 is pd[5]~34 at LC40
A1L94_or_out = A1L93;
A1L94 = A1L94_or_out;


--A1L97 is pd[6]~36 at LC38
A1L97_or_out = A1L96;
A1L97 = A1L97_or_out;


--A1L100 is pd[7]~38 at LC43
A1L100_or_out = A1L99;
A1L100 = A1L100_or_out;


--B1L1 is decoder:comb_7|ShiftLeft0~10 at LC128
B1L1_p1_out = pa[3] & pa[1] & pa[2];
B1L1_or_out = B1L1_p1_out;
B1L1 = B1L1_or_out;


--A1L106 is rx_ld~2 at LC13
A1L106_p1_out = !pa[1] & !pexp_cs_n & !pwr_n & !pa[2] & pa[3];
A1L106_or_out = A1L106_p1_out;
A1L106 = A1L106_or_out;


--A1L56 is hrd_n~5 at LC85
A1L56_p1_out = pa[1] & pa[2] & !pexp_cs_n & !prd_n;
A1L56_or_out = A1L56_p1_out;
A1L56 = !(A1L56_or_out);


--C3_q[0] is flopren:comb_10|q[0] at LC109
C3_q[0]_p1_out = A1L78 & !pa[1] & pa[2] & !pa[3] & !C3_q[0];
C3_q[0]_p2_out = !A1L78 & !pa[1] & pa[2] & !pa[3] & C3_q[0];
C3_q[0]_or_out = C3_q[0]_p1_out # C3_q[0]_p2_out;
C3_q[0]_reg_input = C3_q[0]_or_out;
C3_q[0] = TFFE(C3_q[0]_reg_input, A1L7, GLOBAL(pio_rst_n), , );


--A1L7 is cnt_ld_n~30 at SEXP97
A1L7 = EXP(!pexp_cs_n & !pwr_n);


--C3_q[7] is flopren:comb_10|q[7] at LC98
C3_q[7]_p1_out = A1L99 & !pa[1] & pa[2] & !pa[3] & !C3_q[7];
C3_q[7]_p2_out = !A1L99 & !pa[1] & pa[2] & !pa[3] & C3_q[7];
C3_q[7]_or_out = C3_q[7]_p1_out # C3_q[7]_p2_out;
C3_q[7]_reg_input = C3_q[7]_or_out;
C3_q[7] = TFFE(C3_q[7]_reg_input, A1L7, GLOBAL(pio_rst_n), , );


--C3_q[6] is flopren:comb_10|q[6] at LC103
C3_q[6]_p1_out = A1L96 & !pa[1] & pa[2] & !pa[3] & !C3_q[6];
C3_q[6]_p2_out = !A1L96 & !pa[1] & pa[2] & !pa[3] & C3_q[6];
C3_q[6]_or_out = C3_q[6]_p1_out # C3_q[6]_p2_out;
C3_q[6]_reg_input = C3_q[6]_or_out;
C3_q[6] = TFFE(C3_q[6]_reg_input, A1L7, GLOBAL(pio_rst_n), , );


--C3_q[5] is flopren:comb_10|q[5] at LC19
C3_q[5]_p1_out = A1L93 & !pa[1] & pa[2] & !pa[3] & !C3_q[5];
C3_q[5]_p2_out = !A1L93 & !pa[1] & pa[2] & !pa[3] & C3_q[5];
C3_q[5]_or_out = C3_q[5]_p1_out # C3_q[5]_p2_out;
C3_q[5]_reg_input = C3_q[5]_or_out;
C3_q[5] = TFFE(C3_q[5]_reg_input, A1L8, GLOBAL(pio_rst_n), , );


--C3_q[4] is flopren:comb_10|q[4] at LC88
C3_q[4]_p1_out = A1L90 & !pa[1] & pa[2] & !pa[3] & !C3_q[4];
C3_q[4]_p2_out = !A1L90 & !pa[1] & pa[2] & !pa[3] & C3_q[4];
C3_q[4]_or_out = C3_q[4]_p1_out # C3_q[4]_p2_out;
C3_q[4]_reg_input = C3_q[4]_or_out;
C3_q[4] = TFFE(C3_q[4]_reg_input, A1L9, GLOBAL(pio_rst_n), , );


--C3_q[3] is flopren:comb_10|q[3] at LC105
C3_q[3]_p1_out = A1L87 & !pa[1] & pa[2] & !pa[3] & !C3_q[3];
C3_q[3]_p2_out = !A1L87 & !pa[1] & pa[2] & !pa[3] & C3_q[3];
C3_q[3]_or_out = C3_q[3]_p1_out # C3_q[3]_p2_out;
C3_q[3]_reg_input = C3_q[3]_or_out;
C3_q[3] = TFFE(C3_q[3]_reg_input, A1L7, GLOBAL(pio_rst_n), , );


--C3_q[2] is flopren:comb_10|q[2] at LC49
C3_q[2]_p1_out = A1L84 & !pa[1] & pa[2] & !pa[3] & !C3_q[2];
C3_q[2]_p2_out = !A1L84 & !pa[1] & pa[2] & !pa[3] & C3_q[2];
C3_q[2]_or_out = C3_q[2]_p1_out # C3_q[2]_p2_out;
C3_q[2]_reg_input = C3_q[2]_or_out;
C3_q[2] = TFFE(C3_q[2]_reg_input, A1L10, GLOBAL(pio_rst_n), , );


--C3_q[1] is flopren:comb_10|q[1] at LC67
C3_q[1]_p1_out = A1L81 & !pa[1] & pa[2] & !pa[3] & !C3_q[1];
C3_q[1]_p2_out = !A1L81 & !pa[1] & pa[2] & !pa[3] & C3_q[1];
C3_q[1]_or_out = C3_q[1]_p1_out # C3_q[1]_p2_out;
C3_q[1]_reg_input = C3_q[1]_or_out;
C3_q[1] = TFFE(C3_q[1]_reg_input, A1L11, GLOBAL(pio_rst_n), , );


--C1_q[0] is flopren:comb_8|q[0] at LC102
C1_q[0]_p1_out = A1L78 & !pa[1] & !pa[2] & !pa[3] & !C1_q[0];
C1_q[0]_p2_out = !A1L78 & !pa[1] & !pa[2] & !pa[3] & C1_q[0];
C1_q[0]_or_out = C1_q[0]_p1_out # C1_q[0]_p2_out;
C1_q[0]_reg_input = C1_q[0]_or_out;
C1_q[0] = TFFE(C1_q[0]_reg_input, A1L7, GLOBAL(pio_rst_n), , );


--C1_q[7] is flopren:comb_8|q[7] at LC104
C1_q[7]_p1_out = A1L99 & !pa[1] & !pa[2] & !pa[3] & !C1_q[7];
C1_q[7]_p2_out = !A1L99 & !pa[1] & !pa[2] & !pa[3] & C1_q[7];
C1_q[7]_or_out = C1_q[7]_p1_out # C1_q[7]_p2_out;
C1_q[7]_reg_input = C1_q[7]_or_out;
C1_q[7] = TFFE(C1_q[7]_reg_input, A1L7, GLOBAL(pio_rst_n), , );


--C1_q[6] is flopren:comb_8|q[6] at LC110
C1_q[6]_p1_out = A1L96 & !pa[1] & !pa[2] & !pa[3] & !C1_q[6];
C1_q[6]_p2_out = !A1L96 & !pa[1] & !pa[2] & !pa[3] & C1_q[6];
C1_q[6]_or_out = C1_q[6]_p1_out # C1_q[6]_p2_out;
C1_q[6]_reg_input = C1_q[6]_or_out;
C1_q[6] = TFFE(C1_q[6]_reg_input, A1L7, GLOBAL(pio_rst_n), , );


--C1_q[5] is flopren:comb_8|q[5] at LC20
C1_q[5]_p1_out = A1L93 & !pa[1] & !pa[2] & !pa[3] & !C1_q[5];
C1_q[5]_p2_out = !A1L93 & !pa[1] & !pa[2] & !pa[3] & C1_q[5];
C1_q[5]_or_out = C1_q[5]_p1_out # C1_q[5]_p2_out;
C1_q[5]_reg_input = C1_q[5]_or_out;
C1_q[5] = TFFE(C1_q[5]_reg_input, A1L8, GLOBAL(pio_rst_n), , );


--C1_q[4] is flopren:comb_8|q[4] at LC89
C1_q[4]_p1_out = A1L90 & !pa[1] & !pa[2] & !pa[3] & !C1_q[4];
C1_q[4]_p2_out = !A1L90 & !pa[1] & !pa[2] & !pa[3] & C1_q[4];
C1_q[4]_or_out = C1_q[4]_p1_out # C1_q[4]_p2_out;
C1_q[4]_reg_input = C1_q[4]_or_out;
C1_q[4] = TFFE(C1_q[4]_reg_input, A1L9, GLOBAL(pio_rst_n), , );


--C1_q[3] is flopren:comb_8|q[3] at LC112
C1_q[3]_p1_out = A1L87 & !pa[1] & !pa[2] & !pa[3] & !C1_q[3];
C1_q[3]_p2_out = !A1L87 & !pa[1] & !pa[2] & !pa[3] & C1_q[3];
C1_q[3]_or_out = C1_q[3]_p1_out # C1_q[3]_p2_out;
C1_q[3]_reg_input = C1_q[3]_or_out;
C1_q[3] = TFFE(C1_q[3]_reg_input, A1L7, GLOBAL(pio_rst_n), , );


--C1_q[2] is flopren:comb_8|q[2] at LC50
C1_q[2]_p1_out = A1L84 & !pa[1] & !pa[2] & !pa[3] & !C1_q[2];
C1_q[2]_p2_out = !A1L84 & !pa[1] & !pa[2] & !pa[3] & C1_q[2];
C1_q[2]_or_out = C1_q[2]_p1_out # C1_q[2]_p2_out;
C1_q[2]_reg_input = C1_q[2]_or_out;
C1_q[2] = TFFE(C1_q[2]_reg_input, A1L10, GLOBAL(pio_rst_n), , );


--C1_q[1] is flopren:comb_8|q[1] at LC111
C1_q[1]_p1_out = A1L81 & !pa[1] & !pa[2] & !pa[3] & !C1_q[1];
C1_q[1]_p2_out = !A1L81 & !pa[1] & !pa[2] & !pa[3] & C1_q[1];
C1_q[1]_or_out = C1_q[1]_p1_out # C1_q[1]_p2_out;
C1_q[1]_reg_input = C1_q[1]_or_out;
C1_q[1] = TFFE(C1_q[1]_reg_input, A1L7, GLOBAL(pio_rst_n), , );


--C2_q[0] is flopren:comb_9|q[0] at LC72
C2_q[0]_p1_out = A1L78 & pa[1] & !pa[2] & !pa[3] & !C2_q[0];
C2_q[0]_p2_out = !A1L78 & pa[1] & !pa[2] & !pa[3] & C2_q[0];
C2_q[0]_or_out = C2_q[0]_p1_out # C2_q[0]_p2_out;
C2_q[0]_reg_input = C2_q[0]_or_out;
C2_q[0] = TFFE(C2_q[0]_reg_input, A1L11, GLOBAL(pio_rst_n), , );


--C2_q[7] is flopren:comb_9|q[7] at LC115
C2_q[7]_p1_out = A1L99 & pa[1] & !pa[2] & !pa[3] & !C2_q[7];
C2_q[7]_p2_out = !A1L99 & pa[1] & !pa[2] & !pa[3] & C2_q[7];
C2_q[7]_or_out = C2_q[7]_p1_out # C2_q[7]_p2_out;
C2_q[7]_reg_input = C2_q[7]_or_out;
C2_q[7] = TFFE(C2_q[7]_reg_input, A1L12, GLOBAL(pio_rst_n), , );


--C2_q[6] is flopren:comb_9|q[6] at LC69
C2_q[6]_p1_out = A1L96 & pa[1] & !pa[2] & !pa[3] & !C2_q[6];
C2_q[6]_p2_out = !A1L96 & pa[1] & !pa[2] & !pa[3] & C2_q[6];
C2_q[6]_or_out = C2_q[6]_p1_out # C2_q[6]_p2_out;
C2_q[6]_reg_input = C2_q[6]_or_out;
C2_q[6] = TFFE(C2_q[6]_reg_input, A1L11, GLOBAL(pio_rst_n), , );


--C2_q[5] is flopren:comb_9|q[5] at LC75
C2_q[5]_p1_out = A1L93 & pa[1] & !pa[2] & !pa[3] & !C2_q[5];
C2_q[5]_p2_out = !A1L93 & pa[1] & !pa[2] & !pa[3] & C2_q[5];
C2_q[5]_or_out = C2_q[5]_p1_out # C2_q[5]_p2_out;
C2_q[5]_reg_input = C2_q[5]_or_out;
C2_q[5] = TFFE(C2_q[5]_reg_input, A1L11, GLOBAL(pio_rst_n), , );


--C2_q[4] is flopren:comb_9|q[4] at LC123
C2_q[4]_p1_out = A1L90 & pa[1] & !pa[2] & !pa[3] & !C2_q[4];
C2_q[4]_p2_out = !A1L90 & pa[1] & !pa[2] & !pa[3] & C2_q[4];
C2_q[4]_or_out = C2_q[4]_p1_out # C2_q[4]_p2_out;
C2_q[4]_reg_input = C2_q[4]_or_out;
C2_q[4] = TFFE(C2_q[4]_reg_input, A1L12, GLOBAL(pio_rst_n), , );


--C2_q[3] is flopren:comb_9|q[3] at LC73
C2_q[3]_p1_out = A1L87 & pa[1] & !pa[2] & !pa[3] & !C2_q[3];
C2_q[3]_p2_out = !A1L87 & pa[1] & !pa[2] & !pa[3] & C2_q[3];
C2_q[3]_or_out = C2_q[3]_p1_out # C2_q[3]_p2_out;
C2_q[3]_reg_input = C2_q[3]_or_out;
C2_q[3] = TFFE(C2_q[3]_reg_input, A1L11, GLOBAL(pio_rst_n), , );


--C2_q[2] is flopren:comb_9|q[2] at LC77
C2_q[2]_p1_out = A1L84 & pa[1] & !pa[2] & !pa[3] & !C2_q[2];
C2_q[2]_p2_out = !A1L84 & pa[1] & !pa[2] & !pa[3] & C2_q[2];
C2_q[2]_or_out = C2_q[2]_p1_out # C2_q[2]_p2_out;
C2_q[2]_reg_input = C2_q[2]_or_out;
C2_q[2] = TFFE(C2_q[2]_reg_input, A1L11, GLOBAL(pio_rst_n), , );


--C2_q[1] is flopren:comb_9|q[1] at LC80
C2_q[1]_p1_out = A1L81 & pa[1] & !pa[2] & !pa[3] & !C2_q[1];
C2_q[1]_p2_out = !A1L81 & pa[1] & !pa[2] & !pa[3] & C2_q[1];
C2_q[1]_or_out = C2_q[1]_p1_out # C2_q[1]_p2_out;
C2_q[1]_reg_input = C2_q[1]_or_out;
C2_q[1] = TFFE(C2_q[1]_reg_input, A1L11, GLOBAL(pio_rst_n), , );


--C4_q[0] is flopren:comb_11|q[0] at LC56
C4_q[0]_p1_out = A1L78 & pa[1] & !pa[2] & pa[3] & !C4_q[0];
C4_q[0]_p2_out = !A1L78 & pa[1] & !pa[2] & pa[3] & C4_q[0];
C4_q[0]_or_out = C4_q[0]_p1_out # C4_q[0]_p2_out;
C4_q[0]_reg_input = C4_q[0]_or_out;
C4_q[0] = TFFE(C4_q[0]_reg_input, A1L10, GLOBAL(pio_rst_n), , );


--C4_q[3] is flopren:comb_11|q[3] at LC53
C4_q[3]_p1_out = A1L87 & pa[1] & !pa[2] & pa[3] & !C4_q[3];
C4_q[3]_p2_out = !A1L87 & pa[1] & !pa[2] & pa[3] & C4_q[3];
C4_q[3]_or_out = C4_q[3]_p1_out # C4_q[3]_p2_out;
C4_q[3]_reg_input = C4_q[3]_or_out;
C4_q[3] = TFFE(C4_q[3]_reg_input, A1L10, GLOBAL(pio_rst_n), , );


--C4_q[2] is flopren:comb_11|q[2] at LC51
C4_q[2]_p1_out = A1L84 & pa[1] & !pa[2] & pa[3] & !C4_q[2];
C4_q[2]_p2_out = !A1L84 & pa[1] & !pa[2] & pa[3] & C4_q[2];
C4_q[2]_or_out = C4_q[2]_p1_out # C4_q[2]_p2_out;
C4_q[2]_reg_input = C4_q[2]_or_out;
C4_q[2] = TFFE(C4_q[2]_reg_input, A1L10, GLOBAL(pio_rst_n), , );


--C4_q[1] is flopren:comb_11|q[1] at LC107
C4_q[1]_p1_out = A1L81 & pa[1] & !pa[2] & pa[3] & !C4_q[1];
C4_q[1]_p2_out = !A1L81 & pa[1] & !pa[2] & pa[3] & C4_q[1];
C4_q[1]_or_out = C4_q[1]_p1_out # C4_q[1]_p2_out;
C4_q[1]_reg_input = C4_q[1]_or_out;
C4_q[1] = TFFE(C4_q[1]_reg_input, A1L7, GLOBAL(pio_rst_n), , );


--E1_ldcnt[0].ff is loadable_counter:comb_104|ldcnt[0].ff at LC86
E1_ldcnt[0].ff_p1_out = pa[3] & pa[1] & pa[2];
E1_ldcnt[0].ff_or_out = E1_ldcnt[0].ff_p1_out;
E1_ldcnt[0].ff_reg_input = E1_ldcnt[0].ff_or_out;
E1_ldcnt[0].ff_p3_out = !pexp_cs_n & !prd_n;
E1_ldcnt[0].ff_p2_out = !pa[3] & !pa[1] & !pa[2] & !A1L78 & pio_rst_n & !pexp_cs_n & !pwr_n;
E1_ldcnt[0].ff_p4_out = !pa[3] & !pa[1] & !pa[2] & A1L78 & !pexp_cs_n & !pwr_n;
E1_ldcnt[0].ff = TFFE(E1_ldcnt[0].ff_reg_input, E1_ldcnt[0].ff_p3_out, !E1_ldcnt[0].ff_p2_out, !E1_ldcnt[0].ff_p4_out, );


--E1_ldcnt[1].ff is loadable_counter:comb_104|ldcnt[1].ff at LC83
E1_ldcnt[1].ff_p1_out = E1_ldcnt[0].ff & pa[3] & pa[1] & pa[2];
E1_ldcnt[1].ff_or_out = E1_ldcnt[1].ff_p1_out;
E1_ldcnt[1].ff_reg_input = E1_ldcnt[1].ff_or_out;
E1_ldcnt[1].ff_p3_out = !pexp_cs_n & !prd_n;
E1_ldcnt[1].ff_p2_out = !pa[3] & !pa[1] & !pa[2] & !A1L81 & pio_rst_n & !pexp_cs_n & !pwr_n;
E1_ldcnt[1].ff_p4_out = !pa[3] & !pa[1] & !pa[2] & A1L81 & !pexp_cs_n & !pwr_n;
E1_ldcnt[1].ff = TFFE(E1_ldcnt[1].ff_reg_input, E1_ldcnt[1].ff_p3_out, !E1_ldcnt[1].ff_p2_out, !E1_ldcnt[1].ff_p4_out, );


--E1_ldcnt[2].ff is loadable_counter:comb_104|ldcnt[2].ff at LC94
E1_ldcnt[2].ff_p1_out = E1_ldcnt[0].ff & E1_ldcnt[1].ff & pa[3] & pa[1] & pa[2];
E1_ldcnt[2].ff_or_out = E1_ldcnt[2].ff_p1_out;
E1_ldcnt[2].ff_reg_input = E1_ldcnt[2].ff_or_out;
E1_ldcnt[2].ff_p3_out = !pexp_cs_n & !prd_n;
E1_ldcnt[2].ff_p2_out = !pa[3] & !pa[1] & !pa[2] & !A1L84 & pio_rst_n & !pexp_cs_n & !pwr_n;
E1_ldcnt[2].ff_p4_out = !pa[3] & !pa[1] & !pa[2] & A1L84 & !pexp_cs_n & !pwr_n;
E1_ldcnt[2].ff = TFFE(E1_ldcnt[2].ff_reg_input, E1_ldcnt[2].ff_p3_out, !E1_ldcnt[2].ff_p2_out, !E1_ldcnt[2].ff_p4_out, );


--E1_ldcnt[3].ff is loadable_counter:comb_104|ldcnt[3].ff at LC91
E1_ldcnt[3].ff_p1_out = E1_ldcnt[2].ff & E1_ldcnt[0].ff & E1_ldcnt[1].ff & pa[3] & pa[1] & pa[2];
E1_ldcnt[3].ff_or_out = E1_ldcnt[3].ff_p1_out;
E1_ldcnt[3].ff_reg_input = E1_ldcnt[3].ff_or_out;
E1_ldcnt[3].ff_p3_out = !pexp_cs_n & !prd_n;
E1_ldcnt[3].ff_p2_out = !pa[3] & !pa[1] & !pa[2] & !A1L87 & pio_rst_n & !pexp_cs_n & !pwr_n;
E1_ldcnt[3].ff_p4_out = !pa[3] & !pa[1] & !pa[2] & A1L87 & !pexp_cs_n & !pwr_n;
E1_ldcnt[3].ff = TFFE(E1_ldcnt[3].ff_reg_input, E1_ldcnt[3].ff_p3_out, !E1_ldcnt[3].ff_p2_out, !E1_ldcnt[3].ff_p4_out, );


--E1_ldcnt[4].ff is loadable_counter:comb_104|ldcnt[4].ff at LC97
E1_ldcnt[4].ff_p1_out = E1_ldcnt[3].ff & E1_ldcnt[2].ff & E1_ldcnt[0].ff & E1_ldcnt[1].ff & pa[3] & pa[1] & pa[2];
E1_ldcnt[4].ff_or_out = E1_ldcnt[4].ff_p1_out;
E1_ldcnt[4].ff_reg_input = E1_ldcnt[4].ff_or_out;
E1_ldcnt[4].ff_p3_out = !pexp_cs_n & !prd_n;
E1_ldcnt[4].ff_p2_out = !pa[3] & !pa[1] & !pa[2] & !A1L90 & pio_rst_n & !pexp_cs_n & !pwr_n;
E1_ldcnt[4].ff_p4_out = !pa[3] & !pa[1] & !pa[2] & A1L90 & !pexp_cs_n & !pwr_n;
E1_ldcnt[4].ff = TFFE(E1_ldcnt[4].ff_reg_input, E1_ldcnt[4].ff_p3_out, !E1_ldcnt[4].ff_p2_out, !E1_ldcnt[4].ff_p4_out, );


--E1_ldcnt[5].ff is loadable_counter:comb_104|ldcnt[5].ff at LC93
E1_ldcnt[5].ff_p1_out = E1_ldcnt[4].ff & E1_ldcnt[3].ff & E1_ldcnt[2].ff & E1_ldcnt[0].ff & E1_ldcnt[1].ff & pa[3] & pa[1] & pa[2];
E1_ldcnt[5].ff_or_out = E1_ldcnt[5].ff_p1_out;
E1_ldcnt[5].ff_reg_input = E1_ldcnt[5].ff_or_out;
E1_ldcnt[5].ff_p3_out = !pexp_cs_n & !prd_n;
E1_ldcnt[5].ff_p2_out = !pa[3] & !pa[1] & !pa[2] & !A1L93 & pio_rst_n & !pexp_cs_n & !pwr_n;
E1_ldcnt[5].ff_p4_out = !pa[3] & !pa[1] & !pa[2] & A1L93 & !pexp_cs_n & !pwr_n;
E1_ldcnt[5].ff = TFFE(E1_ldcnt[5].ff_reg_input, E1_ldcnt[5].ff_p3_out, !E1_ldcnt[5].ff_p2_out, !E1_ldcnt[5].ff_p4_out, );


--E1_ldcnt[6].ff is loadable_counter:comb_104|ldcnt[6].ff at LC99
E1_ldcnt[6].ff_p1_out = E1_ldcnt[5].ff & E1_ldcnt[4].ff & E1_ldcnt[3].ff & E1_ldcnt[2].ff & E1_ldcnt[0].ff & E1_ldcnt[1].ff & pa[3] & pa[1] & pa[2];
E1_ldcnt[6].ff_or_out = E1_ldcnt[6].ff_p1_out;
E1_ldcnt[6].ff_reg_input = E1_ldcnt[6].ff_or_out;
E1_ldcnt[6].ff_p3_out = !pexp_cs_n & !prd_n;
E1_ldcnt[6].ff_p2_out = !pa[3] & !pa[1] & !pa[2] & !A1L96 & pio_rst_n & !pexp_cs_n & !pwr_n;
E1_ldcnt[6].ff_p4_out = !pa[3] & !pa[1] & !pa[2] & A1L96 & !pexp_cs_n & !pwr_n;
E1_ldcnt[6].ff = TFFE(E1_ldcnt[6].ff_reg_input, E1_ldcnt[6].ff_p3_out, !E1_ldcnt[6].ff_p2_out, !E1_ldcnt[6].ff_p4_out, );


--E1_ldcnt[7].ff is loadable_counter:comb_104|ldcnt[7].ff at LC101
E1_ldcnt[7].ff_p1_out = E1_ldcnt[6].ff & E1_ldcnt[5].ff & E1_ldcnt[4].ff & E1_ldcnt[3].ff & E1_ldcnt[2].ff & E1_ldcnt[0].ff & E1_ldcnt[1].ff & pa[3] & pa[1] & pa[2];
E1_ldcnt[7].ff_or_out = E1_ldcnt[7].ff_p1_out;
E1_ldcnt[7].ff_reg_input = E1_ldcnt[7].ff_or_out;
E1_ldcnt[7].ff_p3_out = !pexp_cs_n & !prd_n;
E1_ldcnt[7].ff_p2_out = !pa[3] & !pa[1] & !pa[2] & !A1L99 & pio_rst_n & !pexp_cs_n & !pwr_n;
E1_ldcnt[7].ff_p4_out = !pa[3] & !pa[1] & !pa[2] & A1L99 & !pexp_cs_n & !pwr_n;
E1_ldcnt[7].ff = TFFE(E1_ldcnt[7].ff_reg_input, E1_ldcnt[7].ff_p3_out, !E1_ldcnt[7].ff_p2_out, !E1_ldcnt[7].ff_p4_out, );


--D1L21 is mux8:comb_37|Mux7~24 at LC33
D1L21_p1_out = C1_q[0] & !pa[2] & !pa[1] & !pa[3];
D1L21_p2_out = !pa[2] & !pa[1] & pa[3] & hrx[0];
D1L21 = D1L21_p1_out # D1L21_p2_out;


--D1L14 is mux8:comb_37|Mux5~24 at LC54
D1L14_p1_out = C1_q[2] & !pa[2] & !pa[1] & !pa[3];
D1L14_p2_out = !pa[2] & !pa[1] & pa[3] & hrx[2];
D1L14 = D1L14_p1_out # D1L14_p2_out;


--D1L12 is mux8:comb_37|Mux4~24 at LC7
D1L12_p1_out = C1_q[3] & !pa[2] & !pa[1] & !pa[3];
D1L12_p2_out = !pa[2] & !pa[1] & pa[3] & hrx[3];
D1L12 = D1L12_p1_out # D1L12_p2_out;


--D1L6 is mux8:comb_37|Mux2~24 at LC4
D1L6_p1_out = C1_q[5] & !pa[2] & !pa[1] & !pa[3];
D1L6_p2_out = !pa[2] & !pa[1] & pa[3] & hrx[5];
D1L6 = D1L6_p1_out # D1L6_p2_out;


--D1L4 is mux8:comb_37|Mux1~21 at LC2
D1L4_p1_out = C1_q[6] & !pa[3] & !pa[1] & !pa[2];
D1L4 = D1L4_p1_out;


--D1L2 is mux8:comb_37|Mux0~21 at LC28
D1L2_p1_out = C1_q[7] & !pa[3] & !pa[1] & !pa[2];
D1L2 = D1L2_p1_out;


--D1L16 is mux8:comb_37|Mux6~18bal at LC22
D1L16_p0_out = pa[2] & pa[1] & !A1L39;
D1L16_p1_out = !C1_q[1] & !C2_q[1] & !C4_q[1] & !hrx[1] & !pa[2];
D1L16_p2_out = !C1_q[1] & !hrx[1] & !E1_ldcnt[1].ff & !C3_q[1] & !pa[1];
D1L16_p3_out = !C1_q[1] & !C2_q[1] & !C3_q[1] & !A1L39 & !pa[3];
D1L16_p4_out = !C1_q[1] & !pa[2] & !pa[1] & !pa[3];
D1L16_or_out = D1L16_p0_out # D1L16_p1_out # D1L16_p2_out # D1L16_p3_out # D1L16_p4_out;
D1L16 = !(D1L16_or_out);


--D1L7 is mux8:comb_37|Mux3~18bal at LC84
D1L7_p0_out = pa[1] & pa[2] & !A1L45;
D1L7_p1_out = !C1_q[4] & !C3_q[4] & !E1_ldcnt[4].ff & !hrx[4] & !pa[1];
D1L7_p2_out = !C1_q[4] & !hrx[4] & !hirq2_n & !C2_q[4] & !pa[2];
D1L7_p3_out = !C1_q[4] & !C3_q[4] & !C2_q[4] & !A1L45 & !pa[3];
D1L7_p4_out = !C1_q[4] & !pa[1] & !pa[2] & !pa[3];
D1L7_or_out = D1L7_p0_out # D1L7_p1_out # D1L7_p2_out # D1L7_p3_out # D1L7_p4_out;
D1L7 = !(D1L7_or_out);


--pio_rst_n is pio_rst_n at PIN_1
--operation mode is input

pio_rst_n = INPUT();


--pexp_cs_n is pexp_cs_n at PIN_79
--operation mode is input

pexp_cs_n = INPUT();


--prd_n is prd_n at PIN_84
--operation mode is input

prd_n = INPUT();


--pwr_n is pwr_n at PIN_83
--operation mode is input

pwr_n = INPUT();


--pa[1] is pa[1] at PIN_74
--operation mode is input

pa[1] = INPUT();


--pa[2] is pa[2] at PIN_76
--operation mode is input

pa[2] = INPUT();


--pa[3] is pa[3] at PIN_75
--operation mode is input

pa[3] = INPUT();


--hrx[0] is hrx[0] at PIN_24
--operation mode is input

hrx[0] = INPUT();


--hrx[1] is hrx[1] at PIN_25
--operation mode is input

hrx[1] = INPUT();


--hrx[2] is hrx[2] at PIN_22
--operation mode is input

hrx[2] = INPUT();


--hrx[3] is hrx[3] at PIN_20
--operation mode is input

hrx[3] = INPUT();


--hrx[4] is hrx[4] at PIN_21
--operation mode is input

hrx[4] = INPUT();


--hrx[5] is hrx[5] at PIN_18
--operation mode is input

hrx[5] = INPUT();


--hrx[6] is hrx[6] at PIN_16
--operation mode is input

hrx[6] = INPUT();


--hrx[7] is hrx[7] at PIN_17
--operation mode is input

hrx[7] = INPUT();


--card_detect_n is card_detect_n at PIN_67
--operation mode is input

card_detect_n = INPUT();


--hirq2_n is hirq2_n at PIN_35
--operation mode is input

hirq2_n = INPUT();


--x8m is x8m at PIN_2
--operation mode is input

x8m = INPUT();


--A1L78 is pd[0]~0 at PIN_4
--operation mode is bidir

A1L78 = pd[0];

--pd[0] is pd[0] at PIN_4
--operation mode is bidir

pd[0]_tri_out = TRI(D1L22, A1L57);
pd[0] = BIDIR(pd[0]_tri_out);


--A1L81 is pd[1]~1 at PIN_5
--operation mode is bidir

A1L81 = pd[1];

--pd[1] is pd[1] at PIN_5
--operation mode is bidir

pd[1]_tri_out = TRI(D1L19, A1L57);
pd[1] = BIDIR(pd[1]_tri_out);


--A1L84 is pd[2]~2 at PIN_8
--operation mode is bidir

A1L84 = pd[2];

--pd[2] is pd[2] at PIN_8
--operation mode is bidir

pd[2]_tri_out = TRI(D1L15, A1L57);
pd[2] = BIDIR(pd[2]_tri_out);


--A1L87 is pd[3]~3 at PIN_9
--operation mode is bidir

A1L87 = pd[3];

--pd[3] is pd[3] at PIN_9
--operation mode is bidir

pd[3]_tri_out = TRI(D1L11, A1L57);
pd[3] = BIDIR(pd[3]_tri_out);


--A1L90 is pd[4]~4 at PIN_10
--operation mode is bidir

A1L90 = pd[4];

--pd[4] is pd[4] at PIN_10
--operation mode is bidir

pd[4]_tri_out = TRI(D1L10, A1L57);
pd[4] = BIDIR(pd[4]_tri_out);


--A1L93 is pd[5]~5 at PIN_11
--operation mode is bidir

A1L93 = pd[5];

--pd[5] is pd[5] at PIN_11
--operation mode is bidir

pd[5]_tri_out = TRI(D1L5, A1L57);
pd[5] = BIDIR(pd[5]_tri_out);


--A1L96 is pd[6]~6 at PIN_12
--operation mode is bidir

A1L96 = pd[6];

--pd[6] is pd[6] at PIN_12
--operation mode is bidir

pd[6]_tri_out = TRI(D1L3, A1L57);
pd[6] = BIDIR(pd[6]_tri_out);


--A1L99 is pd[7]~7 at PIN_15
--operation mode is bidir

A1L99 = pd[7];

--pd[7] is pd[7] at PIN_15
--operation mode is bidir

pd[7]_tri_out = TRI(D1L1, A1L57);
pd[7] = BIDIR(pd[7]_tri_out);


--A1L37 is hd[0]~0 at PIN_33
--operation mode is bidir

A1L37 = hd[0];

--hd[0] is hd[0] at PIN_33
--operation mode is bidir

hd[0]_tri_out = TRI(A1L79, !A1L71);
hd[0] = BIDIR(hd[0]_tri_out);


--A1L39 is hd[1]~1 at PIN_36
--operation mode is bidir

A1L39 = hd[1];

--hd[1] is hd[1] at PIN_36
--operation mode is bidir

hd[1]_tri_out = TRI(A1L82, !A1L71);
hd[1] = BIDIR(hd[1]_tri_out);


--A1L41 is hd[2]~2 at PIN_34
--operation mode is bidir

A1L41 = hd[2];

--hd[2] is hd[2] at PIN_34
--operation mode is bidir

hd[2]_tri_out = TRI(A1L85, !A1L71);
hd[2] = BIDIR(hd[2]_tri_out);


--A1L43 is hd[3]~3 at PIN_30
--operation mode is bidir

A1L43 = hd[3];

--hd[3] is hd[3] at PIN_30
--operation mode is bidir

hd[3]_tri_out = TRI(A1L88, !A1L71);
hd[3] = BIDIR(hd[3]_tri_out);


--A1L45 is hd[4]~4 at PIN_31
--operation mode is bidir

A1L45 = hd[4];

--hd[4] is hd[4] at PIN_31
--operation mode is bidir

hd[4]_tri_out = TRI(A1L91, !A1L71);
hd[4] = BIDIR(hd[4]_tri_out);


--A1L47 is hd[5]~5 at PIN_28
--operation mode is bidir

A1L47 = hd[5];

--hd[5] is hd[5] at PIN_28
--operation mode is bidir

hd[5]_tri_out = TRI(A1L94, !A1L71);
hd[5] = BIDIR(hd[5]_tri_out);


--A1L49 is hd[6]~6 at PIN_29
--operation mode is bidir

A1L49 = hd[6];

--hd[6] is hd[6] at PIN_29
--operation mode is bidir

hd[6]_tri_out = TRI(A1L97, !A1L71);
hd[6] = BIDIR(hd[6]_tri_out);


--A1L51 is hd[7]~7 at PIN_27
--operation mode is bidir

A1L51 = hd[7];

--hd[7] is hd[7] at PIN_27
--operation mode is bidir

hd[7]_tri_out = TRI(A1L100, !A1L71);
hd[7] = BIDIR(hd[7]_tri_out);


--spio0 is spio0 at PIN_80
--operation mode is output

spio0 = OUTPUT(A1L55);


--hwr_n is hwr_n at PIN_44
--operation mode is output

hwr_n = OUTPUT(A1L70);


--hrd_n is hrd_n at PIN_55
--operation mode is output

hrd_n = OUTPUT(A1L56);


--rx_ld is rx_ld at PIN_6
--operation mode is output

rx_ld = OUTPUT(A1L106);


--spio1 is spio1 at PIN_81
--operation mode is output

spio1 = OUTPUT(B1L1);


--ha[16] is ha[16] at PIN_70
--operation mode is output

ha[16] = OUTPUT(C3_q[0]);


--ha[17] is ha[17] at PIN_45
--operation mode is output

ha[17] = OUTPUT(C3_q[1]);


--ha[18] is ha[18] at PIN_41
--operation mode is output

ha[18] = OUTPUT(C3_q[2]);


--ha[19] is ha[19] at PIN_68
--operation mode is output

ha[19] = OUTPUT(C3_q[3]);


--ha[20] is ha[20] at PIN_57
--operation mode is output

ha[20] = OUTPUT(C3_q[4]);


--ha[8] is ha[8] at PIN_48
--operation mode is output

ha[8] = OUTPUT(C2_q[0]);


--ha[9] is ha[9] at PIN_52
--operation mode is output

ha[9] = OUTPUT(C2_q[1]);


--ha[10] is ha[10] at PIN_51
--operation mode is output

ha[10] = OUTPUT(C2_q[2]);


--ha[11] is ha[11] at PIN_49
--operation mode is output

ha[11] = OUTPUT(C2_q[3]);


--ha[12] is ha[12] at PIN_77
--operation mode is output

ha[12] = OUTPUT(C2_q[4]);


--ha[13] is ha[13] at PIN_50
--operation mode is output

ha[13] = OUTPUT(C2_q[5]);


--ha[14] is ha[14] at PIN_46
--operation mode is output

ha[14] = OUTPUT(C2_q[6]);


--ha[15] is ha[15] at PIN_73
--operation mode is output

ha[15] = OUTPUT(C2_q[7]);


--hsm is hsm at PIN_40
--operation mode is output

hsm = OUTPUT(C4_q[2]);


--hreset_n is hreset_n at PIN_39
--operation mode is output

hreset_n = OUTPUT(C4_q[3]);


--card_detect_n_rx is card_detect_n_rx at PIN_69
--operation mode is output

card_detect_n_rx = OUTPUT(C4_q[1]);


--hirq2_n_rx is hirq2_n_rx at PIN_37
--operation mode is output

hirq2_n_rx = OUTPUT(C4_q[0]);


--ha[0] is ha[0] at PIN_56
--operation mode is output

ha[0] = OUTPUT(E1_ldcnt[0].ff);


--ha[1] is ha[1] at PIN_54
--operation mode is output

ha[1] = OUTPUT(E1_ldcnt[1].ff);


--ha[2] is ha[2] at PIN_61
--operation mode is output

ha[2] = OUTPUT(E1_ldcnt[2].ff);


--ha[3] is ha[3] at PIN_58
--operation mode is output

ha[3] = OUTPUT(E1_ldcnt[3].ff);


--ha[4] is ha[4] at PIN_63
--operation mode is output

ha[4] = OUTPUT(E1_ldcnt[4].ff);


--ha[5] is ha[5] at PIN_60
--operation mode is output

ha[5] = OUTPUT(E1_ldcnt[5].ff);


--ha[6] is ha[6] at PIN_64
--operation mode is output

ha[6] = OUTPUT(E1_ldcnt[6].ff);


--ha[7] is ha[7] at PIN_65
--operation mode is output

ha[7] = OUTPUT(E1_ldcnt[7].ff);






--D1L19 is mux8:comb_37|Mux6~31 at LC14
D1L19_or_out = D1L18;
D1L19 = D1L19_or_out;


--D1L10 is mux8:comb_37|Mux3~31 at LC6
D1L10_or_out = D1L9;
D1L10 = D1L10_or_out;


--D1L22 is mux8:comb_37|Mux7~27 at LC16
D1L22_or_out = D1L20;
D1L22 = D1L22_or_out;


--D1L15 is mux8:comb_37|Mux5~27 at LC11
D1L15_or_out = D1L13;
D1L15 = D1L15_or_out;


--A1L57 is hrd_n~7 at LC21
A1L57_or_out = A1L55;
A1L57 = A1L57_or_out;


--A1L71 is hwr_n~4 at LC24
A1L71_or_out = A1L70;
A1L71 = A1L71_or_out;


--A1L8 is cnt_ld_n~60 at SEXP20
A1L8 = EXP(!pexp_cs_n & !pwr_n);


--A1L9 is cnt_ld_n~61 at SEXP85
A1L9 = EXP(!pexp_cs_n & !pwr_n);


--A1L10 is cnt_ld_n~62 at SEXP49
A1L10 = EXP(!pexp_cs_n & !pwr_n);


--A1L11 is cnt_ld_n~63 at SEXP65
A1L11 = EXP(!pexp_cs_n & !pwr_n);


--A1L12 is cnt_ld_n~64 at SEXP115
A1L12 = EXP(!pexp_cs_n & !pwr_n);


